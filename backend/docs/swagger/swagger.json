{
    "swagger": "2.0",
    "info": {
        "description": "The API for the code camp counting program.",
        "title": "Code Camp Counter API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/rooms": {
            "get": {
                "description": "Return a list of all rooms",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Room"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/api/v1/session": {
            "get": {
                "description": "Return a list of all sessions",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Session"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/api/v1/speaker": {
            "get": {
                "description": "Return a speaker with the specified email",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a speaker by email",
                "parameters": [
                    {
                        "description": "ID of the requested speaker",
                        "name": "speakerID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.getASpeakerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Speaker"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/api/v1/speakers": {
            "get": {
                "description": "Return a list of all speakers",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all speakers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Speaker"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.getASpeakerRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "db.Room": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "roomName": {
                    "type": "string"
                }
            }
        },
        "db.Session": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "room": {
                    "type": "object",
                    "$ref": "#/definitions/db.Room"
                },
                "speaker": {
                    "type": "object",
                    "$ref": "#/definitions/db.Speaker"
                },
                "timeslot": {
                    "type": "object",
                    "$ref": "#/definitions/db.Timeslot"
                }
            }
        },
        "db.Speaker": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "db.Timeslot": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                }
            }
        }
    }
}